(set-logic ALL_SUPPORTED)
(declare-fun fnstart_rcx () (_ BitVec 64))
(declare-fun fnstart_rdx () (_ BitVec 64))
(declare-fun fnstart_rbx () (_ BitVec 64))
(declare-fun fnstart_rsp () (_ BitVec 64))
(declare-fun fnstart_rbp () (_ BitVec 64))
(declare-fun fnstart_rsi () (_ BitVec 64))
(declare-fun fnstart_rdi () (_ BitVec 64))
(declare-fun fnstart_r8 () (_ BitVec 64))
(declare-fun fnstart_r9 () (_ BitVec 64))
(declare-fun fnstart_r12 () (_ BitVec 64))
(declare-fun fnstart_r13 () (_ BitVec 64))
(declare-fun fnstart_r14 () (_ BitVec 64))
(declare-fun fnstart_r15 () (_ BitVec 64))
(declare-const stack_alloc_min (_ BitVec 64))
(assert (= (bvand stack_alloc_min #x0000000000000fff) #b0000000000000000000000000000000000000000000000000000000000000000))
(assert (bvult #b0000000000000000000000000000000000000000000000000001000000000000 stack_alloc_min))
(assert (bvult (bvsub stack_alloc_min #b0000000000000000000000000000000000000000000000000001000000000000) stack_alloc_min))
(declare-const stack_max (_ BitVec 64))
(assert (= (bvand stack_max #x0000000000000fff) #b0000000000000000000000000000000000000000000000000000000000000000))
(assert (bvult stack_alloc_min stack_max))
(assert (bvule stack_alloc_min fnstart_rsp))
(assert (bvule fnstart_rsp (bvsub stack_max #b0000000000000000000000000000000000000000000000000000000000001000)))
(assert (bvult fnstart_rsp (bvsub stack_max #b0000000000000000000000000000000000000000000000000000000000001000)))
(assert (= ((_ extract 3 0) fnstart_rsp) #b1000))
(declare-fun a201000_rax () (_ BitVec 64))
(declare-fun a201000_r10 () (_ BitVec 64))
(declare-fun a201000_r11 () (_ BitVec 64))
(declare-fun a201000_cf () Bool)
(declare-fun a201000_pf () Bool)
(declare-fun a201000_af () Bool)
(declare-fun a201000_zf () Bool)
(declare-fun a201000_sf () Bool)
(declare-fun a201000_tf () Bool)
(declare-fun a201000_if () Bool)
(declare-fun a201000_of () Bool)
(declare-fun a201000_ie () Bool)
(declare-fun a201000_de () Bool)
(declare-fun a201000_ze () Bool)
(declare-fun a201000_oe () Bool)
(declare-fun a201000_ue () Bool)
(declare-fun a201000_pe () Bool)
(declare-fun a201000_ef () Bool)
(declare-fun a201000_es () Bool)
(declare-fun a201000_c0 () Bool)
(declare-fun a201000_c1 () Bool)
(declare-fun a201000_c2 () Bool)
(declare-fun a201000_RESERVED_STATUS_11 () Bool)
(declare-fun a201000_RESERVED_STATUS_12 () Bool)
(declare-fun a201000_RESERVED_STATUS_13 () Bool)
(declare-fun a201000_c3 () Bool)
(declare-fun a201000_RESERVED_STATUS_15 () Bool)
(declare-fun a201000_tag0 () (_ BitVec 2))
(declare-fun a201000_tag1 () (_ BitVec 2))
(declare-fun a201000_tag2 () (_ BitVec 2))
(declare-fun a201000_tag3 () (_ BitVec 2))
(declare-fun a201000_tag4 () (_ BitVec 2))
(declare-fun a201000_tag5 () (_ BitVec 2))
(declare-fun a201000_tag6 () (_ BitVec 2))
(declare-fun a201000_tag7 () (_ BitVec 2))
(declare-fun a201000_mm0 () (_ BitVec 80))
(declare-fun a201000_mm1 () (_ BitVec 80))
(declare-fun a201000_mm2 () (_ BitVec 80))
(declare-fun a201000_mm3 () (_ BitVec 80))
(declare-fun a201000_mm4 () (_ BitVec 80))
(declare-fun a201000_mm5 () (_ BitVec 80))
(declare-fun a201000_mm6 () (_ BitVec 80))
(declare-fun a201000_mm7 () (_ BitVec 80))
(declare-fun a201000_zmm0 () (_ BitVec 512))
(declare-fun a201000_zmm1 () (_ BitVec 512))
(declare-fun a201000_zmm2 () (_ BitVec 512))
(declare-fun a201000_zmm3 () (_ BitVec 512))
(declare-fun a201000_zmm4 () (_ BitVec 512))
(declare-fun a201000_zmm5 () (_ BitVec 512))
(declare-fun a201000_zmm6 () (_ BitVec 512))
(declare-fun a201000_zmm7 () (_ BitVec 512))
(declare-fun a201000_zmm8 () (_ BitVec 512))
(declare-fun a201000_zmm9 () (_ BitVec 512))
(declare-fun a201000_zmm10 () (_ BitVec 512))
(declare-fun a201000_zmm11 () (_ BitVec 512))
(declare-fun a201000_zmm12 () (_ BitVec 512))
(declare-fun a201000_zmm13 () (_ BitVec 512))
(declare-fun a201000_zmm14 () (_ BitVec 512))
(declare-fun a201000_zmm15 () (_ BitVec 512))
(declare-fun a201000_zmm16 () (_ BitVec 512))
(declare-fun a201000_zmm17 () (_ BitVec 512))
(declare-fun a201000_zmm18 () (_ BitVec 512))
(declare-fun a201000_zmm19 () (_ BitVec 512))
(declare-fun a201000_zmm20 () (_ BitVec 512))
(declare-fun a201000_zmm21 () (_ BitVec 512))
(declare-fun a201000_zmm22 () (_ BitVec 512))
(declare-fun a201000_zmm23 () (_ BitVec 512))
(declare-fun a201000_zmm24 () (_ BitVec 512))
(declare-fun a201000_zmm25 () (_ BitVec 512))
(declare-fun a201000_zmm26 () (_ BitVec 512))
(declare-fun a201000_zmm27 () (_ BitVec 512))
(declare-fun a201000_zmm28 () (_ BitVec 512))
(declare-fun a201000_zmm29 () (_ BitVec 512))
(declare-fun a201000_zmm30 () (_ BitVec 512))
(declare-fun a201000_zmm31 () (_ BitVec 512))
(declare-const x86mem_0 (Array (_ BitVec 64) (_ BitVec 8)))
(assert (not (and (bvule (bvsub stack_alloc_min #b0000000000000000000000000000000000000000000000000001000000000000) (bvsub fnstart_rsp #b0000000000000000000000000000000000000000000000000000000000001000)) (and (bvule (bvsub fnstart_rsp #b0000000000000000000000000000000000000000000000000000000000001000) (bvadd (bvsub fnstart_rsp #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000001000)) (bvule (bvadd (bvsub fnstart_rsp #b0000000000000000000000000000000000000000000000000000000000001000) #b0000000000000000000000000000000000000000000000000000000000001000) stack_max)))))
(check-sat)
(exit)
