(check
 ;; Declarations
(% x5 (term Bool)
(% x4 (term Bool)
(% x3 (term Bool)
(% x2 (term Bool)
(% x0 (term Bool)
(% x1 (term Bool)
(% A5 (th_holds true)
(% A3 (th_holds (and (or (and (and (or (or (not (or (p_app x4) (p_app x3))) (or (or (p_app x1) (p_app x0)) (or (p_app x5) (p_app x3)))) (and (or (not (p_app x0)) (not (p_app x5))) (or (and (p_app x5) (p_app x0)) (and (p_app x5) (p_app x0))))) (not (and (and (and (p_app x0) (p_app x1)) (not (p_app x2))) (not (or (p_app x3) (p_app x3)))))) (and (not (and (not (and (p_app x3) (p_app x1))) (not (not (p_app x1))))) (not (and (or (or (p_app x1) (p_app x0)) (or (p_app x4) (p_app x4))) (or (not (p_app x5)) (and (p_app x3) (p_app x4))))))) (or (not (or (not (or (and (p_app x3) (p_app x2)) (or (p_app x0) (p_app x2)))) (or (not (and (p_app x0) (p_app x0))) (and (not (p_app x4)) (not (p_app x3)))))) (not (or (and (and (or (p_app x5) (p_app x3)) (and (p_app x2) (p_app x5))) (not (or (p_app x4) (p_app x4)))) (or (not (not (p_app x1))) (or (or (p_app x3) (p_app x4)) (not (p_app x5)))))))) (not (and (and (not (not (or (not (p_app x0)) (or (p_app x1) (p_app x4))))) (and (or (or (not (p_app x1)) (not (p_app x5))) (not (or (p_app x2) (p_app x3)))) (and (and (and (p_app x5) (p_app x3)) (not (p_app x2))) (not (not (p_app x5)))))) (or (or (and (and (and (p_app x0) (p_app x4)) (not (p_app x5))) (not (or (p_app x0) (p_app x0)))) (or (not (or (p_app x0) (p_app x4))) (and (not (p_app x1)) (or (p_app x2) (p_app x0))))) (and (not (or (or (p_app x4) (p_app x2)) (or (p_app x3) (p_app x3)))) (and (and (and (p_app x5) (p_app x3)) (and (p_app x4) (p_app x3))) (and (not (p_app x4)) (not (p_app x1))))))))))
(% A4 (th_holds (not (not (not (and (or (or (and (or (p_app x4) (p_app x3)) (and (p_app x1) (p_app x4))) (and (or (p_app x3) (p_app x0)) (not (p_app x0)))) (and (and (or (p_app x1) (p_app x4)) (and (p_app x3) (p_app x5))) (or (or (p_app x1) (p_app x5)) (and (p_app x0) (p_app x1))))) (or (and (not (not (p_app x5))) (or (or (p_app x0) (p_app x2)) (and (p_app x5) (p_app x0)))) (and (or (not (p_app x2)) (not (p_app x4))) (or (and (p_app x2) (p_app x5)) (not (p_app x0))))))))))
(% A2 (th_holds (and (p_app x0) (p_app x1)))
(% A0 (th_holds (and (or (not (not (and (p_app x0) (p_app x4)))) (and (not (not (p_app x2))) (not (not (p_app x4))))) (not (or (not (or (p_app x2) (p_app x5))) (and (not (p_app x4)) (not (p_app x1)))))))
(% A1 (th_holds (and (and (not (and (and (not (and (and (and (p_app x5) (p_app x0)) (not (p_app x4))) (or (and (p_app x0) (p_app x0)) (or (p_app x0) (p_app x0))))) (or (or (not (or (p_app x5) (p_app x2))) (or (not (p_app x3)) (or (p_app x4) (p_app x2)))) (not (and (and (p_app x1) (p_app x0)) (not (p_app x0)))))) (and (not (or (and (or (p_app x1) (p_app x3)) (and (p_app x1) (p_app x0))) (and (and (p_app x2) (p_app x0)) (and (p_app x2) (p_app x3))))) (not (not (or (not (p_app x5)) (not (p_app x5)))))))) (or (or (or (and (or (and (not (p_app x2)) (or (p_app x1) (p_app x0))) (not (not (p_app x1)))) (and (and (and (p_app x4) (p_app x3)) (or (p_app x4) (p_app x3))) (and (not (p_app x5)) (or (p_app x0) (p_app x2))))) (and (not (not (not (p_app x2)))) (or (or (or (p_app x2) (p_app x1)) (or (p_app x3) (p_app x2))) (and (or (p_app x2) (p_app x2)) (and (p_app x4) (p_app x2)))))) (not (or (or (and (or (p_app x1) (p_app x5)) (or (p_app x3) (p_app x5))) (not (not (p_app x5)))) (not (and (not (p_app x3)) (not (p_app x3))))))) (not (or (and (or (or (or (p_app x4) (p_app x4)) (or (p_app x0) (p_app x2))) (not (or (p_app x0) (p_app x4)))) (or (or (or (p_app x2) (p_app x1)) (or (p_app x1) (p_app x4))) (or (or (p_app x4) (p_app x4)) (or (p_app x1) (p_app x5))))) (and (not (or (or (p_app x3) (p_app x4)) (or (p_app x2) (p_app x0)))) (not (not (or (p_app x2) (p_app x3))))))))) (and (or (or (not (not (not (and (not (p_app x2)) (or (p_app x1) (p_app x2)))))) (and (not (or (and (and (p_app x5) (p_app x3)) (not (p_app x3))) (or (and (p_app x4) (p_app x0)) (not (p_app x0))))) (not (not (and (and (p_app x0) (p_app x5)) (and (p_app x3) (p_app x1))))))) (not (and (not (and (not (or (p_app x1) (p_app x3))) (not (or (p_app x1) (p_app x5))))) (not (not (not (or (p_app x1) (p_app x1)))))))) (not (and (or (or (not (not (not (p_app x0)))) (and (not (not (p_app x1))) (or (not (p_app x0)) (or (p_app x4) (p_app x3))))) (or (and (or (and (p_app x4) (p_app x0)) (and (p_app x1) (p_app x2))) (or (not (p_app x1)) (not (p_app x5)))) (or (or (or (p_app x3) (p_app x0)) (or (p_app x3) (p_app x4))) (or (or (p_app x3) (p_app x4)) (and (p_app x1) (p_app x2)))))) (not (and (not (or (not (p_app x3)) (not (p_app x3)))) (and (and (or (p_app x5) (p_app x1)) (not (p_app x2))) (or (or (p_app x5) (p_app x4)) (or (p_app x0) (p_app x5)))))))))))
(: (holds cln)

 ;; Printing deferred declarations 


 ;; Printing the global let map ;; Printing aliasing declarations 


 ;; Rewrites for Lemmas 

 ;; In the preprocessor we trust 
(th_let_pf _ (trust_f (and (or (and (or (and (or (not (p_app x0)) (not (p_app x5))) (or (and (p_app x5) (p_app x0)) (and (p_app x5) (p_app x0)))) (or (not (or (p_app x4) (p_app x3))) (or (p_app x1) (or (p_app x0) (or (p_app x5) (p_app x3) ))))) (and (not (and (not (or (p_app x3) (p_app x3))) (and (not (p_app x2)) (and (p_app x0) (p_app x1) )))) (and (not (and (not (and (p_app x3) (p_app x1))) (p_app x1))) (not (and (or (p_app x1) (or (p_app x0) (p_app x4) )) (or (not (p_app x5)) (and (p_app x3) (p_app x4))))) ))) (or (not (or (not (or (and (p_app x3) (p_app x2)) (or (p_app x0) (p_app x2) ))) (or (not (and (p_app x0) (p_app x0))) (and (not (p_app x4)) (not (p_app x3))) ))) (not (or (and (not (or (p_app x4) (p_app x4))) (and (or (p_app x5) (p_app x3)) (and (p_app x2) (p_app x5) ))) (or (p_app x1) (or (not (p_app x5)) (or (p_app x3) (p_app x4) ))))) )) (not (and (or (and (not (or (p_app x4) (or (p_app x2) (p_app x3) ))) (and (not (p_app x4)) (and (not (p_app x1)) (and (p_app x5) (and (p_app x3) (p_app x4) ))))) (or (and (not (or (p_app x0) (p_app x0))) (and (not (p_app x5)) (and (p_app x0) (p_app x4) ))) (or (not (or (p_app x0) (p_app x4))) (and (not (p_app x1)) (or (p_app x2) (p_app x0))) ))) (and (or (not (p_app x0)) (or (p_app x1) (p_app x4) )) (and (or (not (or (p_app x2) (p_app x3))) (or (not (p_app x1)) (not (p_app x5)) )) (and (p_app x5) (and (not (p_app x2)) (and (p_app x5) (p_app x3) ))))))))) (\ .PA606
(th_let_pf _ (trust_f (and (p_app x0) (p_app x1))) (\ .PA427
(th_let_pf _ (trust_f (not (and (or (and (or (and (p_app x0) (p_app x1)) (or (p_app x1) (p_app x5) )) (and (or (p_app x1) (p_app x4)) (and (p_app x3) (p_app x5) ))) (or (and (or (p_app x4) (p_app x3)) (and (p_app x1) (p_app x4) )) (and (or (p_app x3) (p_app x0)) (not (p_app x0))) )) (or (and (p_app x5) (or (and (p_app x5) (p_app x0)) (or (p_app x0) (p_app x2) ))) (and (or (not (p_app x2)) (not (p_app x4))) (or (and (p_app x2) (p_app x5)) (not (p_app x0)))))))) (\ .PA617
(th_let_pf _ (trust_f (and (not (and (not (and (or (and (p_app x0) (p_app x0)) (p_app x0)) (and (not (p_app x4)) (and (p_app x5) (p_app x0) )))) (and (or (not (and (not (p_app x0)) (and (p_app x1) (p_app x0) ))) (or (not (or (p_app x5) (p_app x2))) (or (not (p_app x3)) (or (p_app x4) (p_app x2) )))) (and (not (or (and (or (p_app x1) (p_app x3)) (and (p_app x1) (p_app x0) )) (and (p_app x2) (and (p_app x0) (p_app x3) )))) (or (not (p_app x5)) (not (p_app x5))) )))) (and (or (not (or (and (or (not (or (p_app x0) (p_app x4))) (or (p_app x4) (or (p_app x0) (p_app x2) ))) (or (p_app x2) (or (p_app x1) (or (p_app x4) (p_app x5) )))) (and (not (or (p_app x3) (or (p_app x4) (or (p_app x2) (p_app x0) )))) (or (p_app x2) (p_app x3))))) (or (not (or (not (and (not (p_app x3)) (not (p_app x3)))) (or (and (or (p_app x1) (p_app x5)) (or (p_app x3) (p_app x5))) (p_app x5) ))) (or (and (or (and (not (p_app x2)) (or (p_app x1) (p_app x0))) (p_app x1)) (and (or (p_app x4) (p_app x3)) (and (not (p_app x5)) (and (or (p_app x0) (p_app x2)) (and (p_app x4) (p_app x3) ))))) (and (not (p_app x2)) (or (and (or (p_app x2) (p_app x2)) (and (p_app x4) (p_app x2) )) (or (p_app x2) (or (p_app x1) (p_app x3) )))) ))) (and (or (not (and (not (and (not (or (p_app x1) (p_app x3))) (not (or (p_app x1) (p_app x5))))) (not (or (p_app x1) (p_app x1))))) (or (not (and (not (p_app x2)) (or (p_app x1) (p_app x2)))) (and (not (or (and (not (p_app x3)) (and (p_app x5) (p_app x3) )) (or (and (p_app x4) (p_app x0)) (not (p_app x0)) ))) (and (p_app x0) (and (p_app x5) (and (p_app x3) (p_app x1) )))) )) (not (and (or (not (p_app x0)) (or (and (p_app x1) (or (not (p_app x0)) (or (p_app x4) (p_app x3) ))) (or (and (or (and (p_app x4) (p_app x0)) (and (p_app x1) (p_app x2))) (or (not (p_app x1)) (not (p_app x5)))) (or (and (p_app x1) (p_app x2)) (or (p_app x3) (or (p_app x0) (p_app x4) )))))) (not (and (not (or (not (p_app x3)) (not (p_app x3)))) (and (or (p_app x5) (or (p_app x4) (p_app x0) )) (and (or (p_app x5) (p_app x1)) (not (p_app x2)) )))))) )))) (\ .PA572
(th_let_pf _ (trust_f (and (or (and (p_app x0) (p_app x4)) (and (p_app x2) (p_app x4))) (not (or (not (or (p_app x2) (p_app x5))) (and (not (p_app x4)) (not (p_app x1))))))) (\ .PA514

;; Printing mapping from preprocessed assertions into atoms 
(decl_atom (p_app x0) (\ .v2 (\ .a2
(decl_atom (p_app x1) (\ .v8 (\ .a8
(decl_atom (p_app x2) (\ .v5 (\ .a5
(decl_atom (p_app x3) (\ .v14 (\ .a14
(decl_atom (p_app x4) (\ .v3 (\ .a3
(decl_atom (p_app x5) (\ .v7 (\ .a7
(decl_atom (and (p_app x5) (p_app x0)) (\ .v65 (\ .a65
(decl_atom (or (p_app x1) (p_app x4)) (\ .v97 (\ .a97
(decl_atom (or (not (p_app x3)) (not (p_app x3))) (\ .v60 (\ .a60
(decl_atom (and (p_app x0) (p_app x1)) (\ .v95 (\ .a95
(decl_atom (or (not (p_app x0)) (or (and (p_app x1) (or (not (p_app x0)) (or (p_app x4) (p_app x3) ))) (or (and (or (and (p_app x4) (p_app x0)) (and (p_app x1) (p_app x2))) (or (not (p_app x1)) (not (p_app x5)))) (or (and (p_app x1) (p_app x2)) (or (p_app x3) (or (p_app x0) (p_app x4) )))))) (\ .v59 (\ .a59
(decl_atom (and (not (or (not (p_app x3)) (not (p_app x3)))) (and (or (p_app x5) (or (p_app x4) (p_app x0) )) (and (or (p_app x5) (p_app x1)) (not (p_app x2)) ))) (\ .v63 (\ .a63
(decl_atom (or (and (p_app x0) (p_app x1)) (or (p_app x1) (p_app x5) )) (\ .v96 (\ .a96
(decl_atom (and (or (and (p_app x0) (p_app x1)) (or (p_app x1) (p_app x5) )) (and (or (p_app x1) (p_app x4)) (and (p_app x3) (p_app x5) ))) (\ .v98 (\ .a98
(decl_atom (or (and (or (and (p_app x0) (p_app x1)) (or (p_app x1) (p_app x5) )) (and (or (p_app x1) (p_app x4)) (and (p_app x3) (p_app x5) ))) (or (and (or (p_app x4) (p_app x3)) (and (p_app x1) (p_app x4) )) (and (or (p_app x3) (p_app x0)) (not (p_app x0))) )) (\ .v102 (\ .a102
(decl_atom (or (and (p_app x5) (p_app x0)) (or (p_app x0) (p_app x2) )) (\ .v103 (\ .a103
(decl_atom (and (p_app x5) (or (and (p_app x5) (p_app x0)) (or (p_app x0) (p_app x2) ))) (\ .v104 (\ .a104
(decl_atom (or (and (p_app x5) (or (and (p_app x5) (p_app x0)) (or (p_app x0) (p_app x2) ))) (and (or (not (p_app x2)) (not (p_app x4))) (or (and (p_app x2) (p_app x5)) (not (p_app x0))))) (\ .v109 (\ .a109
(satlem _ _ (ast _ _ _ .a60 (\ .l121 (ast _ _ _ .a63 (\ .l127 (clausify_false (contra _ .l121 (and_elim_1 _ _ .l127))))))) (\ .pb206
(satlem _ _ (asf _ _ _ .a14 (\ .l28 (asf _ _ _ .a60 (\ .l120 (clausify_false (contra _ (not_not_elim _ (and_elim_1 _ _ (not_or_elim _ _ .l120))) .l28)))))) (\ .pb196
(satlem _ _ (asf _ _ _ .a7 (\ .l14 (asf _ _ _ .a5 (\ .l10 (clausify_false (contra _ (or_elim_1 _ _ .l10 (not_not_elim _ (and_elim_1 _ _ (not_or_elim _ _ (and_elim_2 _ _ .PA514))))) .l14)))))) (\ .pb11
(satlem _ _ (asf _ _ _ .a104 (\ .l208 (ast _ _ _ .a103 (\ .l207 (ast _ _ _ .a7 (\ .l15 (clausify_false (contra _ .l207 (or_elim_1 _ _ (not_not_intro _ .l15) (not_and_elim _ _ .l208)))))))))) (\ .pb254
(satlem _ _ (asf _ _ _ .a103 (\ .l206 (ast _ _ _ .a65 (\ .l131 (clausify_false (contra _ .l131 (and_elim_1 _ _ (not_or_elim _ _ .l206)))))))) (\ .pb253
(satlem _ _ (ast _ _ _ .a109 (\ .l219 (ast _ _ _ .a102 (\ .l205 (clausify_false (contra _ .l219 (or_elim_1 _ _ (not_not_intro _ .l205) (not_and_elim _ _ .PA617)))))))) (\ .pb260
(satlem _ _ (asf _ _ _ .a109 (\ .l218 (ast _ _ _ .a104 (\ .l209 (clausify_false (contra _ .l209 (and_elim_1 _ _ (not_or_elim _ _ .l218)))))))) (\ .pb259
(satlem _ _ (asf _ _ _ .a59 (\ .l118 (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .l5 (and_elim_1 _ _ (not_or_elim _ _ (and_elim_2 _ _ (not_or_elim _ _ (and_elim_2 _ _ (not_or_elim _ _ (and_elim_2 _ _ (not_or_elim _ _ (and_elim_2 _ _ (not_or_elim _ _ (and_elim_2 _ _ (not_or_elim _ _ .l118)))))))))))))))))) (\ .pb194
(satlem _ _ (asf _ _ _ .a95 (\ .l190 (ast _ _ _ .a8 (\ .l17 (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .PA427 .l190)))))))) (\ .pb245
(satlem _ _ (asf _ _ _ .a2 (\ .l4 (clausify_false (contra _ (and_elim_1 _ _ .PA427) .l4)))) (\ .pb212
(satlem _ _ (ast _ _ _ .a5 (\ .l11 (ast _ _ _ .a63 (\ .l127 (clausify_false (contra _ .l11 (and_elim_2 _ _ (and_elim_2 _ _ (and_elim_2 _ _ .l127))))))))) (\ .pb209
(satlem _ _ (asf _ _ _ .a96 (\ .l192 (ast _ _ _ .a95 (\ .l191 (clausify_false (contra _ .l191 (and_elim_1 _ _ (not_or_elim _ _ .l192)))))))) (\ .pb246
(satlem _ _ (asf _ _ _ .a65 (\ .l130 (ast _ _ _ .a7 (\ .l15 (ast _ _ _ .a2 (\ .l5 (clausify_false (contra _ .l5 (or_elim_1 _ _ (not_not_intro _ .l15) (not_and_elim _ _ .l130)))))))))) (\ .pb215
(satlem _ _ (asf _ _ _ .a102 (\ .l204 (ast _ _ _ .a98 (\ .l197 (clausify_false (contra _ .l197 (and_elim_1 _ _ (not_or_elim _ _ .l204)))))))) (\ .pb252
(satlem _ _ (asf _ _ _ .a63 (\ .l126 (ast _ _ _ .a59 (\ .l119 (clausify_false (contra _ .l126 (or_elim_1 _ _ (not_not_intro _ .l119) (not_and_elim _ _ (and_elim_2 _ _ (and_elim_2 _ _ (and_elim_2 _ _ .PA572))))))))))) (\ .pb211
(satlem _ _ (asf _ _ _ .a98 (\ .l196 (ast _ _ _ .a97 (\ .l195 (ast _ _ _ .a96 (\ .l193 (ast _ _ _ .a7 (\ .l15 (ast _ _ _ .a14 (\ .l29 (clausify_false (contra _ .l15 (or_elim_1 _ _ (not_not_intro _ .l29) (not_and_elim _ _ (or_elim_1 _ _ (not_not_intro _ .l195) (not_and_elim _ _ (or_elim_1 _ _ (not_not_intro _ .l193) (not_and_elim _ _ .l196)))))))))))))))))) (\ .pb248
(satlem _ _ (asf _ _ _ .a97 (\ .l194 (ast _ _ _ .a8 (\ .l17 (clausify_false (contra _ .l17 (and_elim_1 _ _ (not_or_elim _ _ .l194)))))))) (\ .pb247
(satlem _ _ (asf _ _ _ .a8 (\ .l16 (clausify_false (contra _ (and_elim_2 _ _ .PA427) .l16)))) (\ .pb213
 ;; Theory Lemmas 

;; BB atom mapping


;; Bit-blasting definitional clauses 


 ;; Bit-blasting learned clauses 

;; Printing final unsat proof 
(satlem_simplify _ _ _ (Q _ _ .pb194 .pb212 .v2) (\ .cl261
(satlem_simplify _ _ _ (Q _ _ .pb211 .cl261 .v59) (\ .cl262
(satlem_simplify _ _ _ (Q _ _ .pb209 .cl262 .v63) (\ .cl263
(satlem_simplify _ _ _ (R _ _ .pb11 .cl263 .v5) (\ .cl264
(satlem_simplify _ _ _ (Q _ _ (Q _ _ .pb215 .cl264 .v7) .pb212 .v2) (\ .cl265
(satlem_simplify _ _ _ (Q _ _ .pb253 .cl265 .v65) (\ .cl266
(satlem_simplify _ _ _ (Q _ _ (Q _ _ .pb254 .cl266 .v103) .cl264 .v7) (\ .cl267
(satlem_simplify _ _ _ (Q _ _ .pb259 .cl267 .v104) (\ .cl268
(satlem_simplify _ _ _ (Q _ _ .pb247 .pb213 .v8) (\ .cl269
(satlem_simplify _ _ _ (Q _ _ (Q _ _ .pb245 .pb213 .v8) .pb212 .v2) (\ .cl270
(satlem_simplify _ _ _ (Q _ _ .pb246 .cl270 .v95) (\ .cl271
(satlem_simplify _ _ _ (Q _ _ .pb206 .cl262 .v63) (\ .cl272
(satlem_simplify _ _ _ (R _ _ .pb196 .cl272 .v60) (\ .cl273
(satlem_simplify _ _ _ (Q _ _ (Q _ _ (Q _ _ (Q _ _ .pb248 .cl269 .v97) .cl271 .v96) .cl264 .v7) .cl273 .v14) (\ .cl274
(satlem_simplify _ _ _ (Q _ _ .pb252 .cl274 .v98) (\ .cl275
(satlem_simplify _ _ _ (Q _ _ (Q _ _ .pb260 .cl268 .v109) .cl275 .v102) (\ empty empty))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
;;
